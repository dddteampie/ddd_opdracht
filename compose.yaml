services:
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    ports:
      - 8080:8080
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_BOOTSTRAP_ADMIN_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_BOOTSTRAP_ADMIN_PASSWORD}
    command: start-dev
    volumes:
      - keycloak_data:/opt/keycloak/data 
    depends_on:
      postgres: 
        condition: service_healthy 
    networks:
      - app-network

  postgres:
    image: postgres:16
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network

  product-service:
    build:
      context: ./product
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "8081:8080"
    env_file:
    - ./product/.env
    environment:
      DOCKERIZED_ENV: 1
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  ecd-service:
    build:
      context: ./ecd
      dockerfile: Dockerfile
    container_name: ECDService
    ports:
      - "8082:8082"
    env_file:
    - ./ecd/.env
    environment:
      DOCKERIZED_ENV: 1
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  behoeftebepaling-service:
    build:
      context: ./behoeftebepaling
      dockerfile: Dockerfile
    container_name: behoeftebepaling-service
    ports:
      - "8083:8080" 
  #   environment:
  #     DOCKERIZED_ENV: 1
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   networks:
  #     - app-network

  # recommendation-service:
  #     build:
  #       context: ./recommendation
  #       dockerfile: Dockerfile
  #     container_name: recommendation-service
  #     ports:
  #       - "8084:8080"
  #     env_file:
  #     - ./recommendation/.env
  #     environment:
  #       DOCKERIZED_ENV: 1
  #     depends_on:
  #       postgres:
  #         condition: service_healthy
  #     networks:
  #       - app-network

networks:
  app-network:
    driver: bridge

volumes:
  keycloak_data: 
  postgres_data: 
